-- Generated by SQL Maestro for MySQL. Release date 28/11/2018
-- 11/03/2019 6:17:04 p. m.
-- ----------------------------------
-- Alias: fsolutionslvdb at 192.168.230.128
-- Database name: fsolutionslvdb
-- Host: 192.168.230.128
-- Port number: 3306
-- User name: miuserweb
-- Server: 10.1.37-MariaDB
-- Session ID: 2
-- Character set: utf8
-- Collation: utf8_unicode_ci
-- Client encoding: utf8


SET FOREIGN_KEY_CHECKS=0;



USE foodsolutions_lv;

/* Tables */
DROP TABLE IF EXISTS branch_office;

CREATE TABLE branch_office (
  id                            int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name                          varchar(100) NOT NULL,
  main_phone                    varchar(20) NOT NULL,
  main_address                  varchar(50) NOT NULL,
  latitude_longitude_elevation  varchar(150) NOT NULL,
  customer_id                   int(10) UNSIGNED NOT NULL,
  active                        tinyint(1) NOT NULL DEFAULT 0,
  created_at                    timestamp NULL,
  updated_at                    timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS category;

CREATE TABLE category (
  id          int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name        varchar(30) NOT NULL,
  short_name  varchar(20) NOT NULL,
  active      tinyint(1) NOT NULL DEFAULT 0,
  created_at  timestamp NULL,
  updated_at  timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS customer;

CREATE TABLE customer (
  id            int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name          varchar(100) NOT NULL,
  main_phone    varchar(20) NOT NULL,
  main_address  varchar(50) NOT NULL,
  profile_id    int(10) UNSIGNED NOT NULL,
  active        tinyint(1) NOT NULL DEFAULT 0,
  created_at    timestamp NULL,
  updated_at    timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS list_customer_product;

CREATE TABLE list_customer_product (
  id           int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name         varchar(50) NOT NULL,
  description  varchar(100) NOT NULL,
  customer_id  int(10) UNSIGNED NOT NULL,
  users_lm_id  int(10) UNSIGNED,
  active       tinyint(1) NOT NULL DEFAULT 0,
  created_at   timestamp NULL,
  updated_at   timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS list_customer_product_details;

CREATE TABLE list_customer_product_details (
  id                        int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  list_customer_product_id  int(10) UNSIGNED NOT NULL,
  product_id                int(10) UNSIGNED NOT NULL,
  suggest                   tinyint(1) NOT NULL DEFAULT 0,
  priority                  int NOT NULL,
  active                    tinyint(1) NOT NULL DEFAULT 0,
  created_at                timestamp NULL,
  updated_at                timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS migrations;

CREATE TABLE migrations (
  id         int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  migration  varchar(255) NOT NULL,
  batch      int NOT NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS notificationdays;

CREATE TABLE notificationdays (
  id                 int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  `day`              varchar(20) NOT NULL,
  until_this_time    smallint NOT NULL,
  send_notification  tinyint(1) NOT NULL DEFAULT 0,
  active             tinyint(1) NOT NULL DEFAULT 0,
  customer_id        int(10) UNSIGNED NOT NULL,
  created_at         timestamp NULL,
  updated_at         timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS order_management;

CREATE TABLE order_management (
  id                  int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  task_id             int(10) UNSIGNED NOT NULL,
  customer_id         int(10) UNSIGNED NOT NULL,
  `from`              date NOT NULL,
  name_of_day         varchar(40) NOT NULL,
  hour_of_day         time NOT NULL,
  notify              tinyint(1) NOT NULL DEFAULT 0,
  initial_day_notify  varchar(40) NOT NULL,
  notify_from         time NOT NULL,
  active              tinyint(1) NOT NULL DEFAULT 0,
  created_at          timestamp NULL,
  updated_at          timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS product;

CREATE TABLE product (
  id                        int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  cod_fs                    varchar(20) NOT NULL,
  item                      varchar(20) NOT NULL,
  name                      varchar(40) NOT NULL,
  pronunciation_in_english  varchar(150) NOT NULL,
  description               varchar(150) NOT NULL,
  packsize                  varchar(20) NOT NULL,
  picture_url               varchar(150) NOT NULL,
  category_id               int(10) UNSIGNED NOT NULL,
  unit_id                   int(10) UNSIGNED NOT NULL,
  active                    tinyint(1) NOT NULL DEFAULT 0,
  created_at                timestamp NULL,
  updated_at                timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS profile;

CREATE TABLE profile (
  id          int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name        varchar(30) NOT NULL,
  active      tinyint(1) NOT NULL DEFAULT 0,
  created_at  timestamp NULL,
  updated_at  timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS purchase_order;

CREATE TABLE purchase_order (
  id                     int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  customer_id            int(10) UNSIGNED NOT NULL,
  branch_office_id       int(10) UNSIGNED NOT NULL,
  description            varchar(150),
  total_quantity         double NOT NULL,
  purchase_order_number  varchar(100),
  purchase_order_url     varchar(150),
  cut_date               datetime,
  status_id              int(10) UNSIGNED NOT NULL,
  users_create_id        int(10) UNSIGNED NOT NULL,
  users_lm_id            int(10) UNSIGNED NOT NULL,
  created_at             timestamp NULL,
  updated_at             timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS purchase_order_details;

CREATE TABLE purchase_order_details (
  id                   int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  purchase_order_id    int(10) UNSIGNED NOT NULL,
  product_id           int(10) UNSIGNED NOT NULL,
  quantity             double NOT NULL,
  purchase_order_date  date NOT NULL,
  created_at           timestamp NULL,
  updated_at           timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS rol;

CREATE TABLE rol (
  id          int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name        varchar(30) NOT NULL,
  active      tinyint(1) NOT NULL DEFAULT 0,
  created_at  timestamp NULL,
  updated_at  timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS section;

CREATE TABLE section (
  id          int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name        varchar(30) NOT NULL,
  active      tinyint(1) NOT NULL DEFAULT 0,
  created_at  timestamp NULL,
  updated_at  timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS section_rol;

CREATE TABLE section_rol (
  rol_id      int(10) UNSIGNED NOT NULL,
  section_id  int(10) UNSIGNED NOT NULL,
  active      tinyint(1) NOT NULL DEFAULT 0,
  created_at  timestamp NULL,
  updated_at  timestamp NULL
) ENGINE = InnoDB;

DROP TABLE IF EXISTS sessions;

CREATE TABLE sessions (
  id             varchar(255) NOT NULL,
  user_id        int(10) UNSIGNED,
  ip_address     varchar(45),
  user_agent     text,
  payload        text NOT NULL,
  last_activity  int NOT NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS `status`;

CREATE TABLE `status` (
  id           int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name         varchar(30) NOT NULL,
  description  varchar(100) NOT NULL,
  active       tinyint(1) NOT NULL DEFAULT 0,
  created_at   timestamp NULL,
  updated_at   timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS task;

CREATE TABLE task (
  id          int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name        varchar(40) NOT NULL,
  active      tinyint(1) NOT NULL DEFAULT 0,
  created_at  timestamp NULL,
  updated_at  timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS unit;

CREATE TABLE unit (
  id          int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  name        varchar(50) NOT NULL,
  short_name  varchar(20) NOT NULL,
  active      tinyint(1) NOT NULL DEFAULT 0,
  created_at  timestamp NULL,
  updated_at  timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

DROP TABLE IF EXISTS users;

CREATE TABLE users (
  id                            int(10) UNSIGNED AUTO_INCREMENT NOT NULL,
  username                      varchar(8) NOT NULL,
  `password`                    varchar(100) NOT NULL,
  name                          varchar(150) NOT NULL,
  email                         varchar(255) NOT NULL,
  branch_office                 varchar(100) NOT NULL,
  mobile_phone                  varchar(20) NOT NULL,
  landline                      varchar(10) NOT NULL,
  address                       varchar(50) NOT NULL,
  latitude_longitude_elevation  varchar(150) NOT NULL,
  rol_id                        int(10) UNSIGNED,
  customer_id                   int(10) UNSIGNED,
  branch_office_cf_id           int(10) UNSIGNED,
  confirmed                     tinyint(1) DEFAULT 0,
  confirmation_code             varchar(255),
  active                        tinyint(1) NOT NULL DEFAULT 0,
  created_at                    timestamp NULL,
  updated_at                    timestamp NULL,
  PRIMARY KEY (id)
) ENGINE = InnoDB;

/* Data for table "branch_office" */
INSERT INTO branch_office (id, name, main_phone, main_address, latitude_longitude_elevation, customer_id, active, created_at, updated_at) VALUES
  (1, 'CC ', '31234521', 'Iserra', '12345', 1, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (2, 'CC ', '31234521', 'Iserra', '12345', 2, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48');


/* Data for table "category" */
INSERT INTO category (id, name, short_name, active, created_at, updated_at) VALUES
  (1, 'FRZ', 'FRZ', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (2, 'REF', 'REF', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (3, 'DRY', 'DRY', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48');


/* Data for table "customer" */
INSERT INTO customer (id, name, main_phone, main_address, profile_id, active, created_at, updated_at) VALUES
  (1, 'Olive Garden', '7222254', 'CC 100', 1, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (2, 'Copa Airlines', '7222254', 'CC 100', 2, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (3, 'Copa Club', '7222254', 'CC 100', 2, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48');


/* Data for table "list_customer_product" */
INSERT INTO list_customer_product (id, name, description, customer_id, users_lm_id, active, created_at, updated_at) VALUES
  (1, 'Lista Olive Garden', 'Lista Olive Garden', 1, NULL, 1, NULL, NULL),
  (2, 'Copa Airlines', 'Copa Airlines', 2, NULL, 1, NULL, NULL);


/* Data for table "list_customer_product_details" */
INSERT INTO list_customer_product_details (id, list_customer_product_id, product_id, suggest, priority, active, created_at, updated_at) VALUES
  (1, 1, 1, 0, 1, 1, '2019-03-07 18:12:22', '2019-03-07 18:12:22'),
  (2, 1, 2, 0, 2, 1, '2019-03-07 18:12:22', '2019-03-07 18:12:22'),
  (3, 1, 3, 0, 3, 1, '2019-03-07 18:12:22', '2019-03-07 18:12:22'),
  (4, 2, 1, 0, 1, 1, '2019-03-07 18:12:22', '2019-03-07 18:12:22'),
  (5, 2, 2, 0, 2, 1, '2019-03-07 18:12:22', '2019-03-07 18:12:22'),
  (6, 2, 3, 0, 3, 1, '2019-03-07 18:12:22', '2019-03-07 18:12:22');


/* Data for table "migrations" */
INSERT INTO migrations (id, migration, batch) VALUES
  (1, '2019_02_11_205420_create_rol_table', 1),
  (2, '2019_02_11_205520_create_status_table', 1),
  (3, '2019_02_11_205703_create_section_table', 1),
  (4, '2019_02_11_210417_create_profile_table', 1),
  (5, '2019_02_11_210455_create_category_table', 1),
  (6, '2019_02_11_210603_create_unit_table', 1),
  (7, '2019_02_11_210853_create_sections_rol_table', 1),
  (8, '2019_02_11_211020_create_customer_table', 1),
  (9, '2019_02_11_211318_create_notification_days_table', 1),
  (10, '2019_02_11_211319_create_branch_office_table', 1),
  (11, '2019_02_11_211320_create_users_table', 1),
  (12, '2019_02_11_211659_create_product_table', 1),
  (13, '2019_02_11_211804_create_list_customer_product_table', 1),
  (14, '2019_02_11_211914_create_list_customer_product_details_table', 1),
  (15, '2019_02_11_212130_create_purchase_order_table', 1),
  (16, '2019_02_11_212233_create_purchase_order_details_table', 1),
  (17, '2019_02_26_090309_create_task_table', 1),
  (18, '2019_02_26_090511_create_order_management_table', 1),
  (19, '2019_03_07_133610_create_sessions_table', 1);


/* Data for table "notificationdays" */


/* Data for table "order_management" */
INSERT INTO order_management (id, task_id, customer_id, `from`, name_of_day, hour_of_day, notify, initial_day_notify, notify_from, active, created_at, updated_at) VALUES
  (1, 1, 2, '2019-03-06', 'Viernes', '14:00:00', 1, 'Miercoles', '09:00:00', 1, NULL, NULL),
  (2, 1, 1, '2019-03-04', 'Viernes', '15:00:00', 1, 'Miercoles', '09:00:00', 1, NULL, NULL);


/* Data for table "product" */
INSERT INTO product (id, cod_fs, item, name, pronunciation_in_english, description, packsize, picture_url, category_id, unit_id, active, created_at, updated_at) VALUES
  (1, '001', '10764', 'DESSERT APPLE CROSTATA', 'DESSERT APPLE CROSTATA', 'DESSERT APPLE CROSTATA', '1/24 CT', 'https:', 1, 1, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (2, '001', '10803', 'BASE MUSHROOM VEGAN', 'BASE MUSHROOM VEGAN', 'BASE MUSHROOM VEGAN', '4/5 LB', 'https:', 2, 4, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (3, '001', '11270', 'OIL NUTRA CLEAR NT', 'OIL NUTRA CLEAR NT', 'OIL NUTRA CLEAR NT', '1/35 LB', 'https:', 3, 4, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48');


/* Data for table "profile" */
INSERT INTO profile (id, name, active, created_at, updated_at) VALUES
  (1, 'Perfil 1', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (2, 'Perfil 2', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48');


/* Data for table "purchase_order" */
INSERT INTO purchase_order (id, customer_id, branch_office_id, description, total_quantity, purchase_order_number, purchase_order_url, cut_date, status_id, users_create_id, users_lm_id, created_at, updated_at) VALUES
  (1, 2, 2, '', 0, '', '', '2019-03-15 14:00:00', 1, 1, 1, '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (2, 1, 1, '', 0, '', '', '2019-03-15 15:00:00', 1, 1, 1, '2019-03-11 15:26:24', '2019-03-11 15:26:24');


/* Data for table "purchase_order_details" */
INSERT INTO purchase_order_details (id, purchase_order_id, product_id, quantity, purchase_order_date, created_at, updated_at) VALUES
  (1, 1, 1, 0, '2019-03-18', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (2, 1, 3, 0, '2019-03-18', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (3, 1, 3, 0, '2019-03-18', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (4, 1, 1, 0, '2019-03-19', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (5, 1, 3, 0, '2019-03-19', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (6, 1, 3, 0, '2019-03-19', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (7, 1, 1, 0, '2019-03-20', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (8, 1, 3, 0, '2019-03-20', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (9, 1, 3, 0, '2019-03-20', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (10, 1, 1, 0, '2019-03-21', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (11, 1, 3, 0, '2019-03-21', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (12, 1, 3, 0, '2019-03-21', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (13, 1, 1, 0, '2019-03-22', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (14, 1, 3, 0, '2019-03-22', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (15, 1, 3, 0, '2019-03-22', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (16, 1, 1, 0, '2019-03-23', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (17, 1, 3, 0, '2019-03-23', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (18, 1, 3, 0, '2019-03-23', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (19, 1, 1, 0, '2019-03-24', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (20, 1, 3, 0, '2019-03-24', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (21, 1, 3, 0, '2019-03-24', '2019-03-11 15:15:36', '2019-03-11 15:15:36'),
  (22, 2, 1, 0, '2019-03-15', '2019-03-11 15:26:24', '2019-03-11 15:26:24'),
  (23, 2, 2, 0, '2019-03-15', '2019-03-11 15:26:24', '2019-03-11 15:26:24'),
  (24, 2, 3, 0, '2019-03-15', '2019-03-11 15:26:24', '2019-03-11 15:26:24');


/* Data for table "rol" */
INSERT INTO rol (id, name, active, created_at, updated_at) VALUES
  (1, 'Administrador', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (2, 'Distribuidor', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (3, 'Suscursal', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48');


/* Data for table "section" */


/* Data for table "section_rol" */


/* Data for table "sessions" */


/* Data for table "status" */
INSERT INTO `status` (id, name, description, active, created_at, updated_at) VALUES
  (1, 'Creado', 'Pedido creado.', 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49'),
  (2, 'No confirmado', 'Pedido no confirmado por el cliente.', 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49'),
  (3, 'Generado', 'Pedido autorizado por el cliente.', 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49'),
  (4, 'Alistamiento', 'Pedido en curso esta en alistamiento.', 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49'),
  (5, 'Transito', 'Pedido en curso esta en transito.', 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49'),
  (6, 'Entregado', 'Pedido en curso esta en entregado.', 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49');


/* Data for table "task" */
INSERT INTO task (id, name, active, created_at, updated_at) VALUES
  (1, 'Gestionar Pedido', 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49');


/* Data for table "unit" */
INSERT INTO unit (id, name, short_name, active, created_at, updated_at) VALUES
  (1, 'Cajas', 'Cajas', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (2, 'Unidades', 'Unidades', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (3, 'Kg', 'Kg', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (4, 'Libras', 'Libras', 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48');


/* Data for table "users" */
INSERT INTO users (id, username, `password`, name, email, branch_office, mobile_phone, landline, address, latitude_longitude_elevation, rol_id, customer_id, branch_office_cf_id, confirmed, confirmation_code, active, created_at, updated_at) VALUES
  (1, 'Adminplt', '$2y$10$IZxrwCmhfTePES1eKkXm/uJDBJgBawMGGHrM0MsjtN/OLmrJZspdm', 'Administrador Plataforma', 'jfar07@hotmail.com', 'all', 'false', 'false', 'false', 'false', 1, NULL, NULL, 1, NULL, 1, '2019-03-11 15:02:48', '2019-03-11 15:02:48'),
  (2, 'fsdis001', '$2y$10$uqaaquBo5KIoulraSwphQOEB3vr9j3RwlAVji8X89p3IAbh91S59.', 'Distribuidor de la Plataforma', 'no-reply@foodsolutionsmarket.com', 'all', 'false', 'false', 'false', 'false', 2, NULL, NULL, 1, NULL, 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49'),
  (3, 'fsduser1', '$2y$10$g9g4X9TRjov8sGKFbIGSR.Rde1Ql0RzCK7VpvmSH7rWvbeVMAn0RK', 'Distribuidor de la Plataforma', 'no-reply2@foodsolutionsmarket.com', 'all', 'false', 'false', 'false', 'false', 2, 1, 1, 1, NULL, 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49'),
  (4, 'fsduser2', '$2y$10$8zvGUP3x9P8ycWXbcGQQWOiRwmgMyOYcnfqW6mvsQ051qwQKFJNAu', 'Distribuidor de la Plataforma', 'no-reply3@foodsolutionsmarket.com', 'all', 'false', 'false', 'false', 'false', 2, 2, 1, 1, NULL, 1, '2019-03-11 15:02:49', '2019-03-11 15:02:49');


/* Procedures */
DROP PROCEDURE IF EXISTS add_product_to_purchase_order2;

DELIMITER |

CREATE PROCEDURE add_product_to_purchase_order2 
(
  IN  purchase_order_id  int,
  IN  product_id         int
)
BEGIN
     DECLARE productt INT DEFAULT 0;
     SET productt = product_id;
     
     /*INSERT INTO purchase_order_details   (purchase_order_id,product_id,purchase_order_date,created_at,updated_at )   */
     SELECT purchase_order_id,  productt, purchase_order_date,  CURRENT_TIMESTAMP(), CURRENT_TIMESTAMP()  
     FROM purchase_order_details podt
     WHERE podt.purchase_order_id = purchase_order_id
     GROUP BY  purchase_order_id, productt, purchase_order_date;  
END|

DELIMITER ;

DROP PROCEDURE IF EXISTS create_list_customer_product_details;

DELIMITER |

CREATE PROCEDURE create_list_customer_product_details 
(
  IN  po_id       integer,
  IN  ct_id       integer,
  IN  profile_id  integer,
  IN  cut_date    date
)
BEGIN
 DECLARE AccountID VARCHAR(45);
 DECLARE v1 INT DEFAULT 0;
  
  
  IF profile_id = 1 THEN

   INSERT INTO purchase_order_details   (purchase_order_id,product_id,purchase_order_date,created_at,updated_at )   
   SELECT  
   po_id,lctdt.product_id,cut_date, CURRENT_TIMESTAMP()  ,CURRENT_TIMESTAMP()  
   FROM list_customer_product lct left join list_customer_product_details lctdt on lct.id =  lctdt.list_customer_product_id   
   where 
   lct.customer_id = ct_id and lct.active = 1 and lctdt.suggest = 0 and lctdt.active = 1;
   
  ELSEIF profile_id = 2 THEN

  WHILE v1 < 7 DO
  
   INSERT INTO purchase_order_details   (purchase_order_id,product_id,purchase_order_date,created_at,updated_at )   
   SELECT  
   po_id,lctdt.product_id, DATE_ADD(cut_date, INTERVAL v1 DAY), CURRENT_TIMESTAMP()  ,CURRENT_TIMESTAMP()  
   FROM list_customer_product lct left join list_customer_product_details lctdt on lct.id =  lctdt.list_customer_product_id   
   where 
   lct.customer_id = ct_id and lct.active = 1 and lctdt.suggest = 0 and lctdt.active = 1;
   
     SET v1 = v1 + 1;
  END WHILE;
   ELSE
   
   SELECT  * FROM list_customer_product lct where lct.customer_id = ct_id and active = 1;
   
  
  
   END IF;



   
 END|

DELIMITER ;

/* Indexes */
CREATE INDEX branch_office_customer_id_foreign
  ON branch_office
  (customer_id);

CREATE INDEX customer_profile_id_foreign
  ON customer
  (profile_id);

CREATE INDEX list_customer_product_customer_id_foreign
  ON list_customer_product
  (customer_id);

CREATE INDEX list_customer_product_users_lm_id_foreign
  ON list_customer_product
  (users_lm_id);

CREATE INDEX list_customer_product_details_list_customer_product_id_foreign
  ON list_customer_product_details
  (list_customer_product_id);

CREATE INDEX list_customer_product_details_product_id_foreign
  ON list_customer_product_details
  (product_id);

CREATE INDEX notificationdays_customer_id_foreign
  ON notificationdays
  (customer_id);

CREATE INDEX order_management_customer_id_foreign
  ON order_management
  (customer_id);

CREATE INDEX order_management_task_id_foreign
  ON order_management
  (task_id);

CREATE INDEX product_category_id_foreign
  ON product
  (category_id);

CREATE INDEX product_unit_id_foreign
  ON product
  (unit_id);

CREATE INDEX purchase_order_branch_office_id_foreign
  ON purchase_order
  (branch_office_id);

CREATE INDEX purchase_order_customer_id_foreign
  ON purchase_order
  (customer_id);

CREATE INDEX purchase_order_status_id_foreign
  ON purchase_order
  (status_id);

CREATE INDEX purchase_order_users_create_id_foreign
  ON purchase_order
  (users_create_id);

CREATE INDEX purchase_order_users_lm_id_foreign
  ON purchase_order
  (users_lm_id);

CREATE INDEX purchase_order_details_product_id_foreign
  ON purchase_order_details
  (product_id);

CREATE INDEX purchase_order_details_purchase_order_id_foreign
  ON purchase_order_details
  (purchase_order_id);

CREATE INDEX section_rol_rol_id_foreign
  ON section_rol
  (rol_id);

CREATE INDEX section_rol_section_id_foreign
  ON section_rol
  (section_id);

CREATE UNIQUE INDEX sessions_id_unique
  ON sessions
  (id);

CREATE INDEX users_branch_office_cf_id_foreign
  ON users
  (branch_office_cf_id);

CREATE INDEX users_customer_id_foreign
  ON users
  (customer_id);

CREATE UNIQUE INDEX users_email_unique
  ON users
  (email);

CREATE INDEX users_rol_id_foreign
  ON users
  (rol_id);

CREATE UNIQUE INDEX users_username_unique
  ON users
  (username);

/* Foreign Keys */
ALTER TABLE branch_office
  ADD CONSTRAINT branch_office_customer_id_foreign
  FOREIGN KEY (customer_id)
    REFERENCES customer(id)
    ON DELETE CASCADE;

ALTER TABLE customer
  ADD CONSTRAINT customer_profile_id_foreign
  FOREIGN KEY (profile_id)
    REFERENCES profile(id)
    ON DELETE CASCADE;

ALTER TABLE list_customer_product
  ADD CONSTRAINT list_customer_product_customer_id_foreign
  FOREIGN KEY (customer_id)
    REFERENCES customer(id)
    ON DELETE CASCADE;

ALTER TABLE list_customer_product
  ADD CONSTRAINT list_customer_product_users_lm_id_foreign
  FOREIGN KEY (users_lm_id)
    REFERENCES users(id)
    ON DELETE CASCADE;

ALTER TABLE list_customer_product_details
  ADD CONSTRAINT list_customer_product_details_list_customer_product_id_foreign
  FOREIGN KEY (list_customer_product_id)
    REFERENCES list_customer_product(id)
    ON DELETE CASCADE;

ALTER TABLE list_customer_product_details
  ADD CONSTRAINT list_customer_product_details_product_id_foreign
  FOREIGN KEY (product_id)
    REFERENCES product(id)
    ON DELETE CASCADE;

ALTER TABLE notificationdays
  ADD CONSTRAINT notificationdays_customer_id_foreign
  FOREIGN KEY (customer_id)
    REFERENCES customer(id)
    ON DELETE CASCADE;

ALTER TABLE order_management
  ADD CONSTRAINT order_management_customer_id_foreign
  FOREIGN KEY (customer_id)
    REFERENCES customer(id)
    ON DELETE CASCADE;

ALTER TABLE order_management
  ADD CONSTRAINT order_management_task_id_foreign
  FOREIGN KEY (task_id)
    REFERENCES task(id)
    ON DELETE CASCADE;

ALTER TABLE product
  ADD CONSTRAINT product_category_id_foreign
  FOREIGN KEY (category_id)
    REFERENCES category(id)
    ON DELETE CASCADE;

ALTER TABLE product
  ADD CONSTRAINT product_unit_id_foreign
  FOREIGN KEY (unit_id)
    REFERENCES unit(id)
    ON DELETE CASCADE;

ALTER TABLE purchase_order
  ADD CONSTRAINT purchase_order_branch_office_id_foreign
  FOREIGN KEY (branch_office_id)
    REFERENCES branch_office(id)
    ON DELETE CASCADE;

ALTER TABLE purchase_order
  ADD CONSTRAINT purchase_order_customer_id_foreign
  FOREIGN KEY (customer_id)
    REFERENCES customer(id)
    ON DELETE CASCADE;

ALTER TABLE purchase_order
  ADD CONSTRAINT purchase_order_status_id_foreign
  FOREIGN KEY (status_id)
    REFERENCES `status`(id)
    ON DELETE CASCADE;

ALTER TABLE purchase_order
  ADD CONSTRAINT purchase_order_users_create_id_foreign
  FOREIGN KEY (users_create_id)
    REFERENCES users(id)
    ON DELETE CASCADE;

ALTER TABLE purchase_order
  ADD CONSTRAINT purchase_order_users_lm_id_foreign
  FOREIGN KEY (users_lm_id)
    REFERENCES users(id)
    ON DELETE CASCADE;

ALTER TABLE purchase_order_details
  ADD CONSTRAINT purchase_order_details_product_id_foreign
  FOREIGN KEY (product_id)
    REFERENCES product(id)
    ON DELETE CASCADE;

ALTER TABLE purchase_order_details
  ADD CONSTRAINT purchase_order_details_purchase_order_id_foreign
  FOREIGN KEY (purchase_order_id)
    REFERENCES purchase_order(id)
    ON DELETE CASCADE;

ALTER TABLE section_rol
  ADD CONSTRAINT section_rol_rol_id_foreign
  FOREIGN KEY (rol_id)
    REFERENCES rol(id)
    ON DELETE CASCADE;

ALTER TABLE section_rol
  ADD CONSTRAINT section_rol_section_id_foreign
  FOREIGN KEY (section_id)
    REFERENCES section(id)
    ON DELETE CASCADE;

ALTER TABLE users
  ADD CONSTRAINT users_branch_office_cf_id_foreign
  FOREIGN KEY (branch_office_cf_id)
    REFERENCES branch_office(id)
    ON DELETE CASCADE;

ALTER TABLE users
  ADD CONSTRAINT users_customer_id_foreign
  FOREIGN KEY (customer_id)
    REFERENCES customer(id)
    ON DELETE CASCADE;

ALTER TABLE users
  ADD CONSTRAINT users_rol_id_foreign
  FOREIGN KEY (rol_id)
    REFERENCES rol(id)
    ON DELETE CASCADE;